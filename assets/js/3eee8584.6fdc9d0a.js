(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{125:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=b(n),m=r,d=u["".concat(p,".").concat(m)]||u[m]||s[m]||i;return n?a.a.createElement(d,o(o({ref:t},l),{},{components:n})):a.a.createElement(d,o({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var l=2;l<i;l++)p[l]=n[l];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),i=(n(0),n(125)),p={id:"mapip",title:"Function: mapip",sidebar_label:"mapip",custom_edit_url:null,hide_title:!0},o={unversionedId:"unsafe/functions/mapip",id:"unsafe/functions/mapip",isDocsHomePage:!1,title:"Function: mapip",description:"\u25b8 Constmapip(arr ArrayCB): any",source:"@site/docs/unsafe/functions/mapip.md",sourceDirName:"unsafe/functions",slug:"/unsafe/functions/mapip",permalink:"/docs/unsafe/functions/mapip",editUrl:null,version:"current",lastUpdatedAt:1619066311,formattedLastUpdatedAt:"4/22/2021",sidebar_label:"mapip",frontMatter:{id:"mapip",title:"Function: mapip",sidebar_label:"mapip",custom_edit_url:null,hide_title:!0},sidebar:"sidebar",previous:{title:"Function: mapLeft",permalink:"/docs/unsafe/functions/mapleft"},next:{title:"Function: mapipLeft",permalink:"/docs/unsafe/functions/mapipleft"}},c=[],l={toc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("inlineCode",{parentName:"p"},"Const"),Object(i.b)("strong",{parentName:"p"},"mapip"),"(",Object(i.b)("inlineCode",{parentName:"p"},"arr"),": ",Object(i.b)("em",{parentName:"p"},"any"),", ",Object(i.b)("inlineCode",{parentName:"p"},"cb"),": ArrayCB): ",Object(i.b)("em",{parentName:"p"},"any")),Object(i.b)("p",null,"A non-spec compliant fast Array map that ",Object(i.b)("em",{parentName:"p"},"modifies the input array")," and maps in-place."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"remarks"))," "),Object(i.b)("p",null,"This implementation loops in reverse order.\nThe mapip function should be used with caution due to its destructive nature.\nWe see promising use cases where you may iterate a map that is not used for any other purpose.\nConsider the following: const users = ","[111, 112, 113, 114]",".map(id => database.fetchById(id));\nThe user ID array is not used, but all other traditional map implementations make an unnecessary allocation."),Object(i.b)("h4",{id:"parameters"},"Parameters:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"left"},"Name"),Object(i.b)("th",{parentName:"tr",align:"left"},"Type"),Object(i.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"arr")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("em",{parentName:"td"},"any")),Object(i.b)("td",{parentName:"tr",align:"left"},"The input array-like to map through.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"cb")),Object(i.b)("td",{parentName:"tr",align:"left"},"ArrayCB"),Object(i.b)("td",{parentName:"tr",align:"left"},"The callback provided to produce mapped results. This iteratee is invoked with three arguments: value, index","|","key, and arr.")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Returns:")," ",Object(i.b)("em",{parentName:"p"},"any")),Object(i.b)("p",null,"typeof arr - The modified input."),Object(i.b)("p",null,"Defined in: ",Object(i.b)("a",{parentName:"p",href:"https://github.com/kaihodev/hikidashi/blob/4304b4b/src/unsafe/array/mapip.ts#L19"},"unsafe/array/mapip.ts:19")))}b.isMDXComponent=!0}}]);